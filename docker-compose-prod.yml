version: '2'
volumes:
  db_data: {}
  certs:
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - '80:80'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './stats-backend:/stats-backend/'
      - '/etc/nginx/vhost.d'
      - './certs:/etc/nginx/certs:ro'
      - './config/nginx/default_location:/etc/nginx/vhost.d/default_location'
      - '/usr/share/nginx/html'
    depends_on:
      - webserver
  letsencrypt-nginx-proxy-companion:
    restart: always
    image: nginxproxy/acme-companion:latest
    depends_on:
      - nginx-proxy
    volumes_from:
      - nginx-proxy
    env_file:
      - ./.envs/.proxy
    volumes:
      - '/etc/acme.sh'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - 'certs:/etc/nginx/certs:rw'
  webserver:
    build:
      context: .
      dockerfile: compose/django/Dockerfile
    environment:
      VIRTUAL_HOST: localhost
    depends_on:
      - postgres
    volumes:
      - './stats-backend:/stats-backend/'
    expose:
      - '8002'
    env_file:
      - ./.envs/.django
  redis:
    image: 'redis:alpine'
    expose:
      - '6379'
  celery:
    build:
      context: .
      dockerfile: compose/celery/Dockerfile
    volumes:
      - './stats-backend:/stats-backend/'
    env_file:
      - ./.envs/.django
    depends_on:
      - redis
      - postgres
      - webserver
  celery_beat:
    build:
      context: .
      dockerfile: compose/celery/Dockerfile
    command: celery -A core beat -l INFO
    volumes:
      - './stats-backend:/stats-backend/'
    env_file:
      - ./.envs/.django
    depends_on:
      - redis
      - postgres
      - webserver
  postgres:
    build:
      context: .
      dockerfile: compose/postgres/Dockerfile
    env_file:
      - ./.envs/.db
    volumes:
      - 'db_data:/var/lib/postgresql/data'
  frontend:
    build:
      context: .
      dockerfile: compose/frontend/Dockerfile
    volumes:
      - './golemstats-frontend:/app'
      - '/app/node_modules'
    expose:
      - '8081'
    env_file:
      - ./.envs/.frontend
    environment:
      - NGINX_PORT=8081
